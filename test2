STARTHEADER
.
16893
samuel
samuel
8
4096
ENDHEADER
STARTHEADER
./packing.c
33204
samuel
samuel
16
8183
ENDHEADER
STARTPROGRAM

/* LIBRERIAS DEL SISTEMA QUE UTILIZA PACKING.C */
#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <unistd.h>
#include <stdlib.h>
#include <pwd.h>
#include <grp.h>

/*
* Funcion:
* --------------------------
* 
 
* basePath: 
* root:

* return: 
*/

int addHeader(char *data, char *filename)
{
    FILE *fichero;
    fichero = fopen(filename, "a");
    fputs(data, fichero);
    fputs("\n", fichero);
    fclose(fichero);
    return 0;
}

/*
* Funcion:
* --------------------------
* 
 
* basePath: 
* root:

* return: 
*/

int addContent(FILE *data, char *filename)
{
    FILE *fichero;
    int data1;
    fichero = fopen(filename, "a");
    data1 = 0;
    if (data != NULL)
    {
        while ((data1 = fgetc(data)) != EOF)
        {
            fputc(data1, fichero);
        }
    }
    fputs("\n", fichero);
    fclose(data);
    fclose(fichero);
    return 0;
}

/*
* Funcion: recursiveTree
* --------------------------
* Encargada de hacer un recorrido por todo el arbol de directorio y de archivos, es decir,
  pasando por cada archivo/directorio dentro de una direccion en especifico.
 
* basePath: La direccion base por la que comenzara el recorrido del arbol
* filename
* root: Un entero que representa el nivel del arbol.
* n: Es el identificador del flag n
* v: Es el identificador del flag v

* return: nada.
*/

void packing(char *basePath, char *filename, const int root, int n, int v)
{
    /* Se encarga de inicializar las variables que usaremos en el recorrido */
    int i;
    char path[1000];
    char str[255];
    char buff[10000];

    /* Crea un struct dirent que contiene informacion del directorio */
    struct dirent *dp;

    /* Inicializan variables para poder conocer informacion del archivo */
    struct stat st;
    struct passwd *pws;
    struct group *grp;
    mode_t mode;

    /* Se crea variable que contendra el archivo a empaquetar */
    FILE *fichero;

    /* Inicializa directorios a recorrer */
    DIR *dir;

    /* Abre lo que se encuentre en la direccion que se pasa por argumento */
    fichero = fopen(basePath, "r");
    if (fichero != NULL)
    {
        /* Consigue el stat de lo que pasamos como argumento y lo linkea a nuestra variable personal creada para el caso */
        stat(basePath, &st);

        /* Encuentra el mode, para verificar que tipo de archivo tenemos a la mano */
        mode = st.st_mode;

        if (S_ISDIR(mode))
        {
            /* Si es directorio */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);
        }
        else if (S_ISREG(mode) && strcmp(basePath, filename))
        {
            /* Si es archivo regular y si el archivo a empaquetar no es una version de si mismo */

            /* Copia la direccion del path en un string */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);

            /* Copia toda la data del archivo en el paquete */
            addHeader("STARTPROGRAM", filename);
            addContent(fichero, filename);
            addHeader("ENDPROGRAM", filename);
        }
        else if (n && S_ISLNK(mode))
        {
            /* Si es link */
            /* Copia la direccion del path en un string */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);

            /* Copia toda la data del archivo en el paquete */
            addHeader("STARTPROGRAM", filename);
            addContent(fichero, filename);
            addHeader("ENDPROGRAM", filename);
        }
        else if (n && (S_ISBLK(mode) || S_ISCHR(mode) || S_ISFIFO(mode) || S_ISLNK(mode)))
        {
        }
        else if (fichero == NULL)
        {
            /* Si no existe ningun archivo o directorio con ese nombre */
        }

        fclose(fichero);

        /* Abre el directorio con la direccion especifica */
        dir = opendir(basePath);

        /* Si no existe tal directorio entonces se sale de la funcion */
        if (dir == NULL)
        {
            return;
        }

        /* Mientras existe un apuntador que devuelva readdir(), se seguira en el ciclo */
        while ((dp = readdir(dir)) != NULL)
        {
            /* Mientras el directorio no sea el base, realiza unas actividades especiales para una correcta impresion */
            if (strcmp(dp->d_name, ".") != 0 && strcmp(dp->d_name, "..") != 0)
            {
                /* Imprime en pantalla el nombre del archivo actual */
                if (v)
                {
                    printf("packing... %s \n", dp->d_name);
                }

                /* Copia hacia la variable path el nuevo directorio base */
                strcpy(path, basePath);
                strcat(path, "/");
                strcat(path, dp->d_name);

                /* LLamada recursiva hacia el nuevo directorio hijo, trasladando el root por 2 */
                packing(path, filename, root + 2, n, v);
            }
        }
        /* Cierra el actual directorio para liberar el espacio de memoria */
        closedir(dir);
    }
}
ENDPROGRAM
STARTHEADER
./packing.h
33204
samuel
samuel
8
119
ENDHEADER
STARTPROGRAM
#ifndef PACKING_h
#define PACKING_h

void packing(char *basePath, char *filename,const int root, int n, int v);

#endif
ENDPROGRAM
STARTHEADER
./mytar
33277
samuel
samuel
40
17728
ENDHEADER
STARTPROGRAM
ELF          >          @        >          @ 8 	 @         @       @       @       ¯      ¯                   8      8      8                                                         8"      8"                    -      -      -      ¯                           (-      (-      (-                               T      T      T      D       D              PÂtd   ‡      ‡      ‡      t       t              QÂtd                                                  RÂtd   -      -      -      Ë      Ë             /lib64/ld-linux-x86-64.so.2          GNU                        GNU F¢ëí´9øGV8ó3Ìßd	n«                                                     ∑                      ⁄                                             f                      {                      (                      C                                            :                      `                      É                      T                      1                      Z                      •                      û                      ˆ                       º                                            m                      "                      ä                      t                                                                  è   "                    libc.so.6 strcpy readdir sprintf fopen getpwuid closedir getgrgid __stack_chk_fail fgetc fputc fputs fclose malloc strcat opendir fscanf atoi __cxa_finalize strcmp __libc_start_main free __xstat GLIBC_2.4 GLIBC_2.2.5 _ITM_deregisterTMCloneTable __gmon_start__ _ITM_registerTMCloneTable                                               ii   ƒ      ui	   Œ       -                    -             –      0             0      ÿ/                    ‡/                    Ë/                    /                    ¯/                    0/                    8/                    @/                    H/                    P/                    X/                    `/                    h/         	           p/         
           x/                    Ä/                    à/                    ê/                    ò/                    †/                    ®/                    ∞/                    ∏/                    ¿/                    »/                    –/                    HÉÏHã]&  HÖ¿tˇ–HÉƒ√         ˇ5z%  ˇ%|%  @ ˇ%z%  h    È‡ˇˇˇˇ%r%  h   È–ˇˇˇˇ%j%  h   È¿ˇˇˇˇ%b%  h   È∞ˇˇˇˇ%Z%  h   È†ˇˇˇˇ%R%  h   Èêˇˇˇˇ%J%  h   ÈÄˇˇˇˇ%B%  h   Èpˇˇˇˇ%:%  h   È`ˇˇˇˇ%2%  h	   ÈPˇˇˇˇ%*%  h
   È@ˇˇˇˇ%"%  h   È0ˇˇˇˇ%%  h   È ˇˇˇˇ%%  h   Èˇˇˇˇ%
%  h   È ˇˇˇˇ%%  h   È˛ˇˇˇ%˙$  h   È‡˛ˇˇˇ%Ú$  h   È–˛ˇˇˇ%Í$  h   È¿˛ˇˇˇ%‚$  h   È∞˛ˇˇˇ%⁄$  h   È†˛ˇˇˇ%Ú$  fê        1ÌIâ—^Hâ‚HÉ‰PTLçÍ  Hçs  Hç=Ê   ˇ¶$  ÙD  Hç=…$  UHç¡$  H9¯HâÂtHãz$  HÖ¿t]ˇ‡f.Ñ     ]√@ f.Ñ     Hç=â$  Hç5Ç$  UH)˛HâÂH¡˛HâH¡Ë?H∆H—˛tHãA$  HÖ¿t]ˇ‡fÑ     ]√@ f.Ñ     Ä=9$   u/HÉ=$   UHâÂtHã=$  ËˇˇˇËHˇˇˇ∆$  ]√Ä    Û√fD  UHâÂ]ÈfˇˇˇUHâÂHÅÏp  âΩú˛ˇˇHâµê˛ˇˇdHã%(   HâE¯1¿HçÖ¨˛ˇˇf«   HãÖê˛ˇˇHÉ¿Hã ∂ àÖ¨˛ˇˇHçÖ∂˛ˇˇf«   HãÖê˛ˇˇHÉ¿Hã ∂@àÖ∂˛ˇˇHçÖ∂˛ˇˇHç5Æ  Hâ«Ë‚˝ˇˇÖ¿tiHçÖ∂˛ˇˇHç5ñ  Hâ«Ë»˝ˇˇÖ¿tOHçÖ¨˛ˇˇHç5z  Hâ«ËÆ˝ˇˇÖ¿t5HçÖ¿˛ˇˇf« ./∆@ HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë⁄˝ˇˇÈê   HçÖ¨˛ˇˇHç5+  Hâ«Ë_˝ˇˇÖ¿u"HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë{¸ˇˇÎTHçÖ¨˛ˇˇHç5Ò  Hâ«Ë#˝ˇˇÖ¿u:HçÖ∂˛ˇˇHç5’  Hâ«Ë	˝ˇˇÖ¿u HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë%¸ˇˇHçÖ¿˛ˇˇHâ∆Hç=ú  ∏    ËZ¸ˇˇHçÖ¿˛ˇˇA∏   π    ∫   Hâ∆Hç=o  Ëä  ∏    HãM¯dH3%(   tË¸ˇˇ…√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”Ê∏    +E¯ãU¸â¡”˙â–	]√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”˛∏    +E¯ãU¸â¡”‚â–	]√UHâÂHÅÏÄN  HâΩà±ˇˇHâµÄ±ˇˇdHã%(   HâE¯1¿ød   Ë1¸ˇˇHâÖò±ˇˇød   Ë ¸ˇˇHâÖ†±ˇˇød   Ë¸ˇˇHâÖ®±ˇˇød   Ë˛˚ˇˇHâÖ∞±ˇˇød   ËÌ˚ˇˇHâÖ∏±ˇˇød   Ë‹˚ˇˇHâÖ¿±ˇˇHãÖÄ±ˇˇHç5g  Hâ«Ëœ˚ˇˇHâÖ»±ˇˇ«Öê±ˇˇ    Èª  ∆Ö‡ÿˇˇ HçÖ–±ˇˇHç56  Hâ«Ë\˚ˇˇÖ¿Ö{  Hçï–±ˇˇHãÖ»±ˇˇHç5  Hâ«∏    ËÚ˙ˇˇHçï–±ˇˇHãÖò±ˇˇHâ÷Hâ«ËY˙ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5‚  Hâ«∏    Ë∑˙ˇˇHçï–±ˇˇHãÖ†±ˇˇHâ÷Hâ«Ë˙ˇˇHãÖ†±ˇˇHâ«Ë˚ˇˇâÖî±ˇˇãÖî±ˇˇ%   = @  u	Hçë  ÎHçä  Hãï®±ˇˇHâ∆Hâ◊Ë’˘ˇˇãÖî±ˇˇ%   Ö¿t	HçO  ÎHçY  Hãï®±ˇˇHâ∆Hâ◊Ëƒ˙ˇˇãÖî±ˇˇ%Ä   Ö¿t	Hç3  ÎHç(  Hãï®±ˇˇHâ∆Hâ◊Ëì˙ˇˇãÖî±ˇˇÉ‡@Ö¿t	Hç  ÎHç˘  Hãï®±ˇˇHâ∆Hâ◊Ëd˙ˇˇãÖî±ˇˇÉ‡ Ö¿t	Hç¿  ÎHç   Hãï®±ˇˇHâ∆Hâ◊Ë5˙ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç¶  ÎHçõ  Hãï®±ˇˇHâ∆Hâ◊Ë˙ˇˇãÖî±ˇˇÉ‡Ö¿t	Hçy  ÎHçl  Hãï®±ˇˇHâ∆Hâ◊Ë◊˘ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç3  ÎHç=  Hãï®±ˇˇHâ∆Hâ◊Ë®˘ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç  ÎHç  Hãï®±ˇˇHâ∆Hâ◊Ëy˘ˇˇãÖî±ˇˇÉ‡Ö¿t	HçÏ  ÎHçﬂ  Hãï®±ˇˇHâ∆Hâ◊ËJ˘ˇˇHãÖ®±ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHãÖ®±ˇˇH–f«   ãÖî±ˇˇ%   = †  u	HçÜ  ÎHçw  Hãï®±ˇˇHâ∆Hâ◊Ë‚¯ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5K  Hâ«∏    Ë ¯ˇˇHçï–±ˇˇHãÖ∞±ˇˇHâ÷Hâ«Ëá˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5  Hâ«∏    ËÂ˜ˇˇHçï–±ˇˇHãÖ∏±ˇˇHâ÷Hâ«ËL˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5’  Hâ«∏    Ë™˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5≥  Hâ«∏    Ëà˜ˇˇHçï–±ˇˇHãÖ¿±ˇˇHâ÷Hâ«ËÔˆˇˇHãÖ¿±ˇˇHâ«Ë˜ˇˇÖê±ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï®±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë≠˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∞±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë`˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∏±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï¿±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë∆ˆˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–Hæ      	 Hâ0∆@ Hãïò±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËmˆˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f« 
 HçÖ‡ÿˇˇHâ∆Hç=¶
  ∏    ËNıˇˇHçï–±ˇˇHãÖ»±ˇˇHç5á
  Hâ«∏    Ë\ıˇˇÉ¯ˇÖ˙ˇˇãÖê±ˇˇâ∆Hç=t
  ∏    Ë
ıˇˇHãÖò±ˇˇHâ«ËõÙˇˇHãÖ†±ˇˇHâ«ËåÙˇˇHãÖ∞±ˇˇHâ«Ë}ÙˇˇHãÖ∏±ˇˇHâ«ËnÙˇˇHãÖ¿±ˇˇHâ«Ë_ÙˇˇHãÖ»±ˇˇHâ«ËpÙˇˇ∏    HãM¯dH3%(   tËáÙˇˇ…√UHâÂHÉÏ Hâ}ËHâu‡HãE‡Hç5¸	  Hâ«Ë"ıˇˇHâE¯HãU¯HãEËHâ÷Hâ«Ë{ÙˇˇHãE¯Hâ∆ø
   Ë™ÙˇˇHãE¯Hâ«Ë˛Ûˇˇ∏    …√UHâÂHÉÏ Hâ}ËHâu‡HãE‡Hç5û	  Hâ«ËƒÙˇˇHâE¯«EÙ    HÉ}Ë t(ÎHãU¯ãEÙHâ÷â«ËOÙˇˇHãEËHâ«Ë#ÙˇˇâEÙÉ}Ùˇu⁄HãE¯Hâ∆ø
   Ë)ÙˇˇHãEËHâ«Ë}ÛˇˇHãE¯Hâ«ËqÛˇˇ∏    …√UHâÂHÅÏ,  HâΩ(”ˇˇHâµ ”ˇˇâï”ˇˇâç”ˇˇDâÖ”ˇˇdHã%(   HâE¯1¿HãÖ(”ˇˇHç5Â  Hâ«Ë	ÙˇˇHâÖ8”ˇˇHÉΩ8”ˇˇ Ñæ  Hçï`”ˇˇHãÖ(”ˇˇHâ÷Hâ«Ë;  ãÖx”ˇˇâÖ4”ˇˇãÖ4”ˇˇ%   = @  Ö•  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë†ÚˇˇHãÖ ”ˇˇHâ∆Hç=e  ËE˛ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë,˛ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5?  Hâ«∏    ËÄÛˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÚ˝ˇˇãÖ|”ˇˇâ«ËZÚˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë©˝ˇˇãÖÄ”ˇˇâ«ËAÚˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËæÒˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë`˝ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5u  Hâ«∏    Ë≥ÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë%˝ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5:  Hâ«∏    ËxÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÍ¸ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë‘¸ˇˇÈh  ãÖ4”ˇˇ%   = Ä  Ö  Hãï ”ˇˇHãÖ(”ˇˇHâ÷Hâ«Ë•ÒˇˇÖ¿ÑÍ  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«ËƒˇˇHãÖ ”ˇˇHâ∆Hç=â  Ëi¸ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«ËP¸ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5c  Hâ«∏    Ë§ÒˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë¸ˇˇãÖ|”ˇˇâ«Ë~ˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë+ˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÕ˚ˇˇãÖÄ”ˇˇâ«ËeˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë‚ÔˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÑ˚ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5ô  Hâ«∏    Ë◊ˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËI˚ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5^  Hâ«∏    ËúˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˚ˇˇHãÖ ”ˇˇHâ∆Hç=+  Ë¯˙ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë‚˙ˇˇHãï ”ˇˇHãÖ8”ˇˇHâ÷Hâ«Ë'˚ˇˇHãÖ ”ˇˇHâ∆Hç=˝  Ë≥˙ˇˇÈG  ÉΩ”ˇˇ Ñ:  ãÖ4”ˇˇ%   = †  ÖÁ  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë∑ÓˇˇHãÖ ”ˇˇHâ∆Hç=|  Ë\˙ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«ËC˙ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5V  Hâ«∏    ËóÔˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë	˙ˇˇãÖ|”ˇˇâ«ËqÓˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë¿˘ˇˇãÖÄ”ˇˇâ«ËXÓˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë’ÌˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ëw˘ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5å  Hâ«∏    Ë ÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë<˘ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5Q  Hâ«∏    ËèÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˘ˇˇHãÖ ”ˇˇHâ∆Hç=  ËÎ¯ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë’¯ˇˇHãï ”ˇˇHãÖ8”ˇˇHâ÷Hâ«Ë˘ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë¶¯ˇˇÎ=ÉΩ”ˇˇ t4ãÖ4”ˇˇ%   = `  t"ãÖ4”ˇˇ%   =    tãÖ4”ˇˇ%   =   HãÖ8”ˇˇHâ«Ë≠ÏˇˇHãÖ(”ˇˇHâ«ËÆÏˇˇHâÖP”ˇˇHÉΩP”ˇˇ ÑB  È  HãÖX”ˇˇHÉ¿Hç5m  Hâ«ËÌˇˇÖ¿ÑÊ   HãÖX”ˇˇHÉ¿Hç5M  Hâ«Ë¯ÏˇˇÖ¿Ñƒ   ÉΩ”ˇˇ tHãÖX”ˇˇHÉ¿Hâ∆Hç="  ∏    ËXÏˇˇHãï(”ˇˇHçÖ‘ˇˇHâ÷Hâ«ËÔÎˇˇHçÖ‘ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‘ˇˇH–f« / HãÖX”ˇˇHçPHçÖ‘ˇˇHâ÷Hâ«ËæÏˇˇãÖ”ˇˇçxãç”ˇˇãï”ˇˇHãµ ”ˇˇHçÖ‘ˇˇAâ»â—â˙Hâ«Ë¯ˇˇHãÖP”ˇˇHâ«Ë=ÏˇˇHâÖX”ˇˇHÉΩX”ˇˇ Ö‘˛ˇˇHãÖP”ˇˇHâ«ËŸÎˇˇÎêHãE¯dH3%(   tËbÎˇˇ…√AWAVIâ◊AUATLç%f  UHç-f  SAâ˝IâˆL)ÂHÉÏH¡˝ËØÍˇˇHÖÌt 1€Ñ     Lâ˙LâˆDâÔAˇ‹HÉ√H9›uÍHÉƒ[]A\A]A^A_√êf.Ñ     Û√f.Ñ     @ HâÚHâ˛ø   È`ÎˇˇHÉÏHÉƒ√         / . %s 
    r STARTHEADER %s d - w x l      
Total bytes of files packed: %i
 a r STARTHEADER %i %li ENDHEADER STARTPROGRAM ENDPROGRAM . .. packing... %s 
 ;t      ¿Èˇˇ¿    ÎˇˇË   0Îˇˇê   :Ïˇˇ   Óˇˇ   BÓˇˇ@  mÓˇˇ`  õıˇˇÄ  ˘ıˇˇ†  Üˆˇˇ¿  ¿˛ˇˇ‡  0ˇˇˇ(  @ˇˇˇ@             zR xê      òÍˇˇ+                  zR xê  $      ¯Ëˇˇ`   FJwÄ ?;*3$"       D   0Íˇˇ              \   2Îˇˇ›   AÜCÿ    |   ÔÏˇˇ+    AÜCf      ú   ˙Ïˇˇ+    AÜCf      º   Ìˇˇ.   AÜC)    ‹   Ùˇˇ^    AÜCY     ¸   QÙˇˇç    AÜCà       æÙˇˇ:   AÜC5 D   <  ÿ¸ˇˇe    BèBéE çB(åH0ÜH8ÉM@r8A0A(B BBB    Ñ   ˝ˇˇ              ú  ¯¸ˇˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 –                           Ä	             0             -                            -                    ı˛ˇo    ò             @             ∏      
                                                 /             ¯                           à             »             ¿       	                            ˚ˇˇo          ˛ˇˇo    ò      ˇˇˇo           ˇˇo    `      ˘ˇˇo                                                                                           (-                      ∂	      ∆	      ÷	      Ê	      ˆ	      
      
      &
      6
      F
      V
      f
      v
      Ü
      ñ
      ¶
      ∂
      ∆
      ÷
      Ê
      ˆ
                                                      0      GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0                                    8                    T                    t                    ò                    ∏                    @                    `                    ò                   	 »                   
 à                    Ä	                    †	                                                             0                    @                    ‡                    X                     -                     -                    (-                    /                     0                    0                                        Òˇ                     @                   Ä              !     –              7     0             F      -              m                   y     -              ò    Òˇ                ü    Òˇ                ´    Òˇ                ≤    Òˇ                    Òˇ                º     4"                   Òˇ                2                          -              €     (-              ‰      -              ˜      ‡              
    /                                0                 7                     I    Ÿ      ç       T                      ¨      0              p                     Ñ    M      .      è    0              ñ                     ™                     ø                     *    0              ’                     ú                     Ò                         ˜      +                            )                     =                     P                     f    f      :      n                     Å                     †    {      ^       ™     0              ∑                     À                      ⁄   0              Á    @             ˆ                                               †      e       0                     ÷     0              D    "      +       ∞          +       Q    0              ]          ›      b                     u                     á                     õ                     ∞   0              º                      ÷  "                   *    Ä	               crtstuff.c deregister_tm_clones __do_global_dtors_aux completed.7697 __do_global_dtors_aux_fini_array_entry frame_dummy __frame_dummy_init_array_entry main.c encrypted.c look.c packing.c __FRAME_END__ __init_array_end _DYNAMIC __init_array_start __GNU_EH_FRAME_HDR _GLOBAL_OFFSET_TABLE_ __libc_csu_fini __stat free@@GLIBC_2.2.5 addContent _ITM_deregisterTMCloneTable strcpy@@GLIBC_2.2.5 packedInfo _edata fclose@@GLIBC_2.2.5 opendir@@GLIBC_2.2.5 getpwuid@@GLIBC_2.2.5 __stack_chk_fail@@GLIBC_2.4 getgrgid@@GLIBC_2.2.5 rotarIzquierda fputs@@GLIBC_2.2.5 fscanf@@GLIBC_2.2.5 fgetc@@GLIBC_2.2.5 closedir@@GLIBC_2.2.5 packing fputc@@GLIBC_2.2.5 __libc_start_main@@GLIBC_2.2.5 addHeader __data_start strcmp@@GLIBC_2.2.5 __gmon_start__ __dso_handle _IO_stdin_used __xstat@@GLIBC_2.2.5 readdir@@GLIBC_2.2.5 __libc_csu_init malloc@@GLIBC_2.2.5 rotarDerecha __bss_start main fopen@@GLIBC_2.2.5 atoi@@GLIBC_2.2.5 strcat@@GLIBC_2.2.5 sprintf@@GLIBC_2.2.5 __TMC_END__ _ITM_registerTMCloneTable __cxa_finalize@@GLIBC_2.2.5  .symtab .strtab .shstrtab .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame .init_array .fini_array .dynamic .data .bss .comment                                                                              8      8                                    #             T      T                                     1             t      t      $                              D   ˆˇˇo       ò      ò                                   N             ∏      ∏      à                          V             @      @                                   ^   ˇˇˇo       `      `      6                            k   ˛ˇˇo       ò      ò      0                            z             »      »      ¿                            Ñ      B       à      à      ¯                          é             Ä	      Ä	                                    â             †	      †	      `                            î                                                        ù                                                       £             0      0      	                              ©             @      @      †                              ±             ‡      ‡      t                              ø             X       X       ‡                             …             -      -                                   ’              -       -                                   ·             (-      (-                                 ò             /      /      Ë                             Í              0       0                                                 0      0                                    ı      0               0      +                                                   @0      –         /                 	                      9      Ú                                                   =      ˛                              
ENDPROGRAM
STARTHEADER
./encrypted.o
33204
samuel
samuel
8
1416
ENDHEADER
STARTPROGRAM
ELF          >                    »          @     @  
 UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”Ê∏    +E¯ãU¸â¡”˙â–	]√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”˛∏    +E¯ãU¸â¡”‚â–	]√ GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0              zR xê            +    AÜCf      <       +    AÜCf                               Òˇ                                                                                                                                                                 +            +       +        encrypted.c rotarIzquierda rotarDerecha                              @             +        .symtab .strtab .shstrtab .text .data .bss .comment .note.GNU-stack .rela.eh_frame                                                                                          @       V                              !                     ñ                                      '                     ñ                                      ,      0               ñ       ,                             5                      ¬                                      J                     »       X                              E      @               @      0                                                               	                    	                            )                                                    p      T                              
ENDPROGRAM
STARTHEADER
./look.o
33204
samuel
samuel
16
5608
ENDHEADER
STARTPROGRAM
ELF          >                    ®          @     @   UHâÂHÅÏÄN  HâΩà±ˇˇHâµÄ±ˇˇdHã%(   HâE¯1¿ød   Ë    HâÖò±ˇˇød   Ë    HâÖ†±ˇˇød   Ë    HâÖ®±ˇˇød   Ë    HâÖ∞±ˇˇød   Ë    HâÖ∏±ˇˇød   Ë    HâÖ¿±ˇˇHãÖÄ±ˇˇHç5    Hâ«Ë    HâÖ»±ˇˇ«Öê±ˇˇ    Èª  ∆Ö‡ÿˇˇ HçÖ–±ˇˇHç5    Hâ«Ë    Ö¿Ö{  Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖò±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ†±ˇˇHâ÷Hâ«Ë    HãÖ†±ˇˇHâ«Ë    âÖî±ˇˇãÖî±ˇˇ%   = @  u	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇ%   Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇ%Ä   Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡@Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡ Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    HãÖ®±ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHãÖ®±ˇˇH–f«   ãÖî±ˇˇ%   = †  u	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ∞±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ∏±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ¿±ˇˇHâ÷Hâ«Ë    HãÖ¿±ˇˇHâ«Ë    Öê±ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï®±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∞±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∏±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï¿±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–Hæ      	 Hâ0∆@ Hãïò±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f« 
 HçÖ‡ÿˇˇHâ∆Hç=    ∏    Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    É¯ˇÖ˙ˇˇãÖê±ˇˇâ∆Hç=    ∏    Ë    HãÖò±ˇˇHâ«Ë    HãÖ†±ˇˇHâ«Ë    HãÖ∞±ˇˇHâ«Ë    HãÖ∏±ˇˇHâ«Ë    HãÖ¿±ˇˇHâ«Ë    HãÖ»±ˇˇHâ«Ë    ∏    HãM¯dH3%(   tË    …√  r STARTHEADER %s d - w x l      
Total bytes of files packed: %i
  GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0          zR xê            .   AÜC)                             Òˇ                                                                                                                                                                                       .                            )                      0                      6                      =                      D                      K                      P                      W                      ^                      c                      j                       look.c packedInfo _GLOBAL_OFFSET_TABLE_ malloc fopen strcmp fscanf strcpy atoi strcat printf free fclose __stack_chk_fail      .             ¸ˇˇˇˇˇˇˇ?             ¸ˇˇˇˇˇˇˇP             ¸ˇˇˇˇˇˇˇa             ¸ˇˇˇˇˇˇˇr             ¸ˇˇˇˇˇˇˇÉ             ¸ˇˇˇˇˇˇˇò             ¸ˇˇˇˇˇˇˇ†             ¸ˇˇˇˇˇˇˇÀ             ˛ˇˇˇˇˇˇˇ”             ¸ˇˇˇˇˇˇˇ             
       ˝             ¸ˇˇˇˇˇˇˇ            ¸ˇˇˇˇˇˇˇ+            
       8            ¸ˇˇˇˇˇˇˇQ            ¸ˇˇˇˇˇˇˇ`            ¸ˇˇˇˇˇˇˇ                   à                   ö            ¸ˇˇˇˇˇˇˇ∞            ¸ˇˇˇˇˇˇˇπ                   À            ¸ˇˇˇˇˇˇˇ·                   Í                   ¸            ¸ˇˇˇˇˇˇˇ                                      +            ¸ˇˇˇˇˇˇˇ?            ¸ˇˇˇˇˇˇˇH                   Z            ¸ˇˇˇˇˇˇˇn                   w                   â            ¸ˇˇˇˇˇˇˇù                   ¶                   ∏            ¸ˇˇˇˇˇˇˇÃ            ¸ˇˇˇˇˇˇˇ’                   Á            ¸ˇˇˇˇˇˇˇ˚                                                  ¸ˇˇˇˇˇˇˇ*                   3                   E            ¸ˇˇˇˇˇˇˇí                   õ                   ≠            ¸ˇˇˇˇˇˇˇ¬            
       œ            ¸ˇˇˇˇˇˇˇË            ¸ˇˇˇˇˇˇˇ˝            
       
            ¸ˇˇˇˇˇˇˇ#            ¸ˇˇˇˇˇˇˇ8            
       E            ¸ˇˇˇˇˇˇˇZ            
       g            ¸ˇˇˇˇˇˇˇÄ            ¸ˇˇˇˇˇˇˇè            ¸ˇˇˇˇˇˇˇ‚            ¸ˇˇˇˇˇˇˇ/            ¸ˇˇˇˇˇˇˇ|            ¸ˇˇˇˇˇˇˇ…            ¸ˇˇˇˇˇˇˇ"            ¸ˇˇˇˇˇˇˇg            
       q            ¸ˇˇˇˇˇˇˇÜ            
       ì            ¸ˇˇˇˇˇˇˇ´                   µ            ¸ˇˇˇˇˇˇˇƒ            ¸ˇˇˇˇˇˇˇ”            ¸ˇˇˇˇˇˇˇ‚            ¸ˇˇˇˇˇˇˇÒ            ¸ˇˇˇˇˇˇˇ             ¸ˇˇˇˇˇˇˇ            ¸ˇˇˇˇˇˇˇ(            ¸ˇˇˇˇˇˇˇ                       .symtab .strtab .shstrtab .rela.text .data .bss .rodata .comment .note.GNU-stack .rela.eh_frame                                                                                              @       .                                   @               ®
      Ä      
                    &                     n                                     ,                     n                                     1                     p      B                              9      0               ≤      ,                             B                      ﬁ                                     W                     ‡      8                              R      @               (             
                                                         	                 	                      (
      {                                                    @      a                              
ENDPROGRAM
STARTHEADER
./.vscode
16893
samuel
samuel
8
4096
ENDHEADER
STARTHEADER
./.vscode/settings.json
33204
samuel
samuel
8
109
ENDHEADER
STARTPROGRAM
{
    "files.associations": {
        "stat.h": "c",
        "unistd.h": "c",
        "stdlib.h": "c"
    }
}
ENDPROGRAM
STARTHEADER
.
16893
samuel
samuel
8
4096
ENDHEADER
STARTHEADER
./packing.c
33204
samuel
samuel
16
8183
ENDHEADER
STARTPROGRAM

/* LIBRERIAS DEL SISTEMA QUE UTILIZA PACKING.C */
#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <unistd.h>
#include <stdlib.h>
#include <pwd.h>
#include <grp.h>

/*
* Funcion:
* --------------------------
* 
 
* basePath: 
* root:

* return: 
*/

int addHeader(char *data, char *filename)
{
    FILE *fichero;
    fichero = fopen(filename, "a");
    fputs(data, fichero);
    fputs("\n", fichero);
    fclose(fichero);
    return 0;
}

/*
* Funcion:
* --------------------------
* 
 
* basePath: 
* root:

* return: 
*/

int addContent(FILE *data, char *filename)
{
    FILE *fichero;
    int data1;
    fichero = fopen(filename, "a");
    data1 = 0;
    if (data != NULL)
    {
        while ((data1 = fgetc(data)) != EOF)
        {
            fputc(data1, fichero);
        }
    }
    fputs("\n", fichero);
    fclose(data);
    fclose(fichero);
    return 0;
}

/*
* Funcion: recursiveTree
* --------------------------
* Encargada de hacer un recorrido por todo el arbol de directorio y de archivos, es decir,
  pasando por cada archivo/directorio dentro de una direccion en especifico.
 
* basePath: La direccion base por la que comenzara el recorrido del arbol
* filename
* root: Un entero que representa el nivel del arbol.
* n: Es el identificador del flag n
* v: Es el identificador del flag v

* return: nada.
*/

void packing(char *basePath, char *filename, const int root, int n, int v)
{
    /* Se encarga de inicializar las variables que usaremos en el recorrido */
    int i;
    char path[1000];
    char str[255];
    char buff[10000];

    /* Crea un struct dirent que contiene informacion del directorio */
    struct dirent *dp;

    /* Inicializan variables para poder conocer informacion del archivo */
    struct stat st;
    struct passwd *pws;
    struct group *grp;
    mode_t mode;

    /* Se crea variable que contendra el archivo a empaquetar */
    FILE *fichero;

    /* Inicializa directorios a recorrer */
    DIR *dir;

    /* Abre lo que se encuentre en la direccion que se pasa por argumento */
    fichero = fopen(basePath, "r");
    if (fichero != NULL)
    {
        /* Consigue el stat de lo que pasamos como argumento y lo linkea a nuestra variable personal creada para el caso */
        stat(basePath, &st);

        /* Encuentra el mode, para verificar que tipo de archivo tenemos a la mano */
        mode = st.st_mode;

        if (S_ISDIR(mode))
        {
            /* Si es directorio */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);
        }
        else if (S_ISREG(mode) && strcmp(basePath, filename))
        {
            /* Si es archivo regular y si el archivo a empaquetar no es una version de si mismo */

            /* Copia la direccion del path en un string */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);

            /* Copia toda la data del archivo en el paquete */
            addHeader("STARTPROGRAM", filename);
            addContent(fichero, filename);
            addHeader("ENDPROGRAM", filename);
        }
        else if (n && S_ISLNK(mode))
        {
            /* Si es link */
            /* Copia la direccion del path en un string */
            strcpy(str, basePath);

            /* Comienza el copiado del header en el archivo a empaquetar */
            addHeader("STARTHEADER", filename);

            /* Agrega direccion relativa del archivo o directorio */
            addHeader(str, filename);

            /* Agrega el modo del archivo */
            sprintf(buff, "%i", st.st_mode);
            addHeader(buff, filename);

            /* Agrega el username del due√±o del archivo */
            pws = getpwuid(st.st_uid);
            sprintf(buff, "%s", pws->pw_name);
            addHeader(buff, filename);

            /* Agrega el id del grupo due√±o */
            grp = getgrgid(st.st_gid);
            sprintf(buff, "%s", grp->gr_name);
            addHeader(buff, filename);

            /* Agrega el numero de bloques de 512 bytes guardados en memoria */
            sprintf(buff, "%li", st.st_blocks);
            addHeader(buff, filename);

            /* Agrega el tama√±o del archivo en bytes */
            sprintf(buff, "%li", st.st_size);
            addHeader(buff, filename);
            addHeader("ENDHEADER", filename);

            /* Copia toda la data del archivo en el paquete */
            addHeader("STARTPROGRAM", filename);
            addContent(fichero, filename);
            addHeader("ENDPROGRAM", filename);
        }
        else if (n && (S_ISBLK(mode) || S_ISCHR(mode) || S_ISFIFO(mode) || S_ISLNK(mode)))
        {
        }
        else if (fichero == NULL)
        {
            /* Si no existe ningun archivo o directorio con ese nombre */
        }

        fclose(fichero);

        /* Abre el directorio con la direccion especifica */
        dir = opendir(basePath);

        /* Si no existe tal directorio entonces se sale de la funcion */
        if (dir == NULL)
        {
            return;
        }

        /* Mientras existe un apuntador que devuelva readdir(), se seguira en el ciclo */
        while ((dp = readdir(dir)) != NULL)
        {
            /* Mientras el directorio no sea el base, realiza unas actividades especiales para una correcta impresion */
            if (strcmp(dp->d_name, ".") != 0 && strcmp(dp->d_name, "..") != 0)
            {
                /* Imprime en pantalla el nombre del archivo actual */
                if (v)
                {
                    printf("packing... %s \n", dp->d_name);
                }

                /* Copia hacia la variable path el nuevo directorio base */
                strcpy(path, basePath);
                strcat(path, "/");
                strcat(path, dp->d_name);

                /* LLamada recursiva hacia el nuevo directorio hijo, trasladando el root por 2 */
                packing(path, filename, root + 2, n, v);
            }
        }
        /* Cierra el actual directorio para liberar el espacio de memoria */
        closedir(dir);
    }
}
ENDPROGRAM
STARTHEADER
./packing.h
33204
samuel
samuel
8
119
ENDHEADER
STARTPROGRAM
#ifndef PACKING_h
#define PACKING_h

void packing(char *basePath, char *filename,const int root, int n, int v);

#endif
ENDPROGRAM
STARTHEADER
./mytar
33277
samuel
samuel
40
17728
ENDHEADER
STARTPROGRAM
ELF          >          @        >          @ 8 	 @         @       @       @       ¯      ¯                   8      8      8                                                         8"      8"                    -      -      -      ¯                           (-      (-      (-                               T      T      T      D       D              PÂtd   ‡      ‡      ‡      t       t              QÂtd                                                  RÂtd   -      -      -      Ë      Ë             /lib64/ld-linux-x86-64.so.2          GNU                        GNU F¢ëí´9øGV8ó3Ìßd	n«                                                     ∑                      ⁄                                             f                      {                      (                      C                                            :                      `                      É                      T                      1                      Z                      •                      û                      ˆ                       º                                            m                      "                      ä                      t                                                                  è   "                    libc.so.6 strcpy readdir sprintf fopen getpwuid closedir getgrgid __stack_chk_fail fgetc fputc fputs fclose malloc strcat opendir fscanf atoi __cxa_finalize strcmp __libc_start_main free __xstat GLIBC_2.4 GLIBC_2.2.5 _ITM_deregisterTMCloneTable __gmon_start__ _ITM_registerTMCloneTable                                               ii   ƒ      ui	   Œ       -                    -             –      0             0      ÿ/                    ‡/                    Ë/                    /                    ¯/                    0/                    8/                    @/                    H/                    P/                    X/                    `/                    h/         	           p/         
           x/                    Ä/                    à/                    ê/                    ò/                    †/                    ®/                    ∞/                    ∏/                    ¿/                    »/                    –/                    HÉÏHã]&  HÖ¿tˇ–HÉƒ√         ˇ5z%  ˇ%|%  @ ˇ%z%  h    È‡ˇˇˇˇ%r%  h   È–ˇˇˇˇ%j%  h   È¿ˇˇˇˇ%b%  h   È∞ˇˇˇˇ%Z%  h   È†ˇˇˇˇ%R%  h   Èêˇˇˇˇ%J%  h   ÈÄˇˇˇˇ%B%  h   Èpˇˇˇˇ%:%  h   È`ˇˇˇˇ%2%  h	   ÈPˇˇˇˇ%*%  h
   È@ˇˇˇˇ%"%  h   È0ˇˇˇˇ%%  h   È ˇˇˇˇ%%  h   Èˇˇˇˇ%
%  h   È ˇˇˇˇ%%  h   È˛ˇˇˇ%˙$  h   È‡˛ˇˇˇ%Ú$  h   È–˛ˇˇˇ%Í$  h   È¿˛ˇˇˇ%‚$  h   È∞˛ˇˇˇ%⁄$  h   È†˛ˇˇˇ%Ú$  fê        1ÌIâ—^Hâ‚HÉ‰PTLçÍ  Hçs  Hç=Ê   ˇ¶$  ÙD  Hç=…$  UHç¡$  H9¯HâÂtHãz$  HÖ¿t]ˇ‡f.Ñ     ]√@ f.Ñ     Hç=â$  Hç5Ç$  UH)˛HâÂH¡˛HâH¡Ë?H∆H—˛tHãA$  HÖ¿t]ˇ‡fÑ     ]√@ f.Ñ     Ä=9$   u/HÉ=$   UHâÂtHã=$  ËˇˇˇËHˇˇˇ∆$  ]√Ä    Û√fD  UHâÂ]ÈfˇˇˇUHâÂHÅÏp  âΩú˛ˇˇHâµê˛ˇˇdHã%(   HâE¯1¿HçÖ¨˛ˇˇf«   HãÖê˛ˇˇHÉ¿Hã ∂ àÖ¨˛ˇˇHçÖ∂˛ˇˇf«   HãÖê˛ˇˇHÉ¿Hã ∂@àÖ∂˛ˇˇHçÖ∂˛ˇˇHç5Æ  Hâ«Ë‚˝ˇˇÖ¿tiHçÖ∂˛ˇˇHç5ñ  Hâ«Ë»˝ˇˇÖ¿tOHçÖ¨˛ˇˇHç5z  Hâ«ËÆ˝ˇˇÖ¿t5HçÖ¿˛ˇˇf« ./∆@ HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë⁄˝ˇˇÈê   HçÖ¨˛ˇˇHç5+  Hâ«Ë_˝ˇˇÖ¿u"HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë{¸ˇˇÎTHçÖ¨˛ˇˇHç5Ò  Hâ«Ë#˝ˇˇÖ¿u:HçÖ∂˛ˇˇHç5’  Hâ«Ë	˝ˇˇÖ¿u HãÖê˛ˇˇHÉ¿HãHçÖ¿˛ˇˇHâ÷Hâ«Ë%¸ˇˇHçÖ¿˛ˇˇHâ∆Hç=ú  ∏    ËZ¸ˇˇHçÖ¿˛ˇˇA∏   π    ∫   Hâ∆Hç=o  Ëä  ∏    HãM¯dH3%(   tË¸ˇˇ…√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”Ê∏    +E¯ãU¸â¡”˙â–	]√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”˛∏    +E¯ãU¸â¡”‚â–	]√UHâÂHÅÏÄN  HâΩà±ˇˇHâµÄ±ˇˇdHã%(   HâE¯1¿ød   Ë1¸ˇˇHâÖò±ˇˇød   Ë ¸ˇˇHâÖ†±ˇˇød   Ë¸ˇˇHâÖ®±ˇˇød   Ë˛˚ˇˇHâÖ∞±ˇˇød   ËÌ˚ˇˇHâÖ∏±ˇˇød   Ë‹˚ˇˇHâÖ¿±ˇˇHãÖÄ±ˇˇHç5g  Hâ«Ëœ˚ˇˇHâÖ»±ˇˇ«Öê±ˇˇ    Èª  ∆Ö‡ÿˇˇ HçÖ–±ˇˇHç56  Hâ«Ë\˚ˇˇÖ¿Ö{  Hçï–±ˇˇHãÖ»±ˇˇHç5  Hâ«∏    ËÚ˙ˇˇHçï–±ˇˇHãÖò±ˇˇHâ÷Hâ«ËY˙ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5‚  Hâ«∏    Ë∑˙ˇˇHçï–±ˇˇHãÖ†±ˇˇHâ÷Hâ«Ë˙ˇˇHãÖ†±ˇˇHâ«Ë˚ˇˇâÖî±ˇˇãÖî±ˇˇ%   = @  u	Hçë  ÎHçä  Hãï®±ˇˇHâ∆Hâ◊Ë’˘ˇˇãÖî±ˇˇ%   Ö¿t	HçO  ÎHçY  Hãï®±ˇˇHâ∆Hâ◊Ëƒ˙ˇˇãÖî±ˇˇ%Ä   Ö¿t	Hç3  ÎHç(  Hãï®±ˇˇHâ∆Hâ◊Ëì˙ˇˇãÖî±ˇˇÉ‡@Ö¿t	Hç  ÎHç˘  Hãï®±ˇˇHâ∆Hâ◊Ëd˙ˇˇãÖî±ˇˇÉ‡ Ö¿t	Hç¿  ÎHç   Hãï®±ˇˇHâ∆Hâ◊Ë5˙ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç¶  ÎHçõ  Hãï®±ˇˇHâ∆Hâ◊Ë˙ˇˇãÖî±ˇˇÉ‡Ö¿t	Hçy  ÎHçl  Hãï®±ˇˇHâ∆Hâ◊Ë◊˘ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç3  ÎHç=  Hãï®±ˇˇHâ∆Hâ◊Ë®˘ˇˇãÖî±ˇˇÉ‡Ö¿t	Hç  ÎHç  Hãï®±ˇˇHâ∆Hâ◊Ëy˘ˇˇãÖî±ˇˇÉ‡Ö¿t	HçÏ  ÎHçﬂ  Hãï®±ˇˇHâ∆Hâ◊ËJ˘ˇˇHãÖ®±ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHãÖ®±ˇˇH–f«   ãÖî±ˇˇ%   = †  u	HçÜ  ÎHçw  Hãï®±ˇˇHâ∆Hâ◊Ë‚¯ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5K  Hâ«∏    Ë ¯ˇˇHçï–±ˇˇHãÖ∞±ˇˇHâ÷Hâ«Ëá˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5  Hâ«∏    ËÂ˜ˇˇHçï–±ˇˇHãÖ∏±ˇˇHâ÷Hâ«ËL˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5’  Hâ«∏    Ë™˜ˇˇHçï–±ˇˇHãÖ»±ˇˇHç5≥  Hâ«∏    Ëà˜ˇˇHçï–±ˇˇHãÖ¿±ˇˇHâ÷Hâ«ËÔˆˇˇHãÖ¿±ˇˇHâ«Ë˜ˇˇÖê±ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï®±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë≠˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∞±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë`˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∏±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˜ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï¿±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë∆ˆˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–Hæ      	 Hâ0∆@ Hãïò±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËmˆˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f« 
 HçÖ‡ÿˇˇHâ∆Hç=¶
  ∏    ËNıˇˇHçï–±ˇˇHãÖ»±ˇˇHç5á
  Hâ«∏    Ë\ıˇˇÉ¯ˇÖ˙ˇˇãÖê±ˇˇâ∆Hç=t
  ∏    Ë
ıˇˇHãÖò±ˇˇHâ«ËõÙˇˇHãÖ†±ˇˇHâ«ËåÙˇˇHãÖ∞±ˇˇHâ«Ë}ÙˇˇHãÖ∏±ˇˇHâ«ËnÙˇˇHãÖ¿±ˇˇHâ«Ë_ÙˇˇHãÖ»±ˇˇHâ«ËpÙˇˇ∏    HãM¯dH3%(   tËáÙˇˇ…√UHâÂHÉÏ Hâ}ËHâu‡HãE‡Hç5¸	  Hâ«Ë"ıˇˇHâE¯HãU¯HãEËHâ÷Hâ«Ë{ÙˇˇHãE¯Hâ∆ø
   Ë™ÙˇˇHãE¯Hâ«Ë˛Ûˇˇ∏    …√UHâÂHÉÏ Hâ}ËHâu‡HãE‡Hç5û	  Hâ«ËƒÙˇˇHâE¯«EÙ    HÉ}Ë t(ÎHãU¯ãEÙHâ÷â«ËOÙˇˇHãEËHâ«Ë#ÙˇˇâEÙÉ}Ùˇu⁄HãE¯Hâ∆ø
   Ë)ÙˇˇHãEËHâ«Ë}ÛˇˇHãE¯Hâ«ËqÛˇˇ∏    …√UHâÂHÅÏ,  HâΩ(”ˇˇHâµ ”ˇˇâï”ˇˇâç”ˇˇDâÖ”ˇˇdHã%(   HâE¯1¿HãÖ(”ˇˇHç5Â  Hâ«Ë	ÙˇˇHâÖ8”ˇˇHÉΩ8”ˇˇ Ñæ  Hçï`”ˇˇHãÖ(”ˇˇHâ÷Hâ«Ë;  ãÖx”ˇˇâÖ4”ˇˇãÖ4”ˇˇ%   = @  Ö•  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë†ÚˇˇHãÖ ”ˇˇHâ∆Hç=e  ËE˛ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë,˛ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5?  Hâ«∏    ËÄÛˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÚ˝ˇˇãÖ|”ˇˇâ«ËZÚˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë©˝ˇˇãÖÄ”ˇˇâ«ËAÚˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËæÒˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë`˝ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5u  Hâ«∏    Ë≥ÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë%˝ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5:  Hâ«∏    ËxÚˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÍ¸ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë‘¸ˇˇÈh  ãÖ4”ˇˇ%   = Ä  Ö  Hãï ”ˇˇHãÖ(”ˇˇHâ÷Hâ«Ë•ÒˇˇÖ¿ÑÍ  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«ËƒˇˇHãÖ ”ˇˇHâ∆Hç=â  Ëi¸ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«ËP¸ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5c  Hâ«∏    Ë§ÒˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë¸ˇˇãÖ|”ˇˇâ«Ë~ˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë+ˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÕ˚ˇˇãÖÄ”ˇˇâ«ËeˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë‚ÔˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËÑ˚ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5ô  Hâ«∏    Ë◊ˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«ËI˚ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5^  Hâ«∏    ËúˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˚ˇˇHãÖ ”ˇˇHâ∆Hç=+  Ë¯˙ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë‚˙ˇˇHãï ”ˇˇHãÖ8”ˇˇHâ÷Hâ«Ë'˚ˇˇHãÖ ”ˇˇHâ∆Hç=˝  Ë≥˙ˇˇÈG  ÉΩ”ˇˇ Ñ:  ãÖ4”ˇˇ%   = †  ÖÁ  Hãï(”ˇˇHçÖ”ˇˇHâ÷Hâ«Ë∑ÓˇˇHãÖ ”ˇˇHâ∆Hç=|  Ë\˙ˇˇHãï ”ˇˇHçÖ”ˇˇHâ÷Hâ«ËC˙ˇˇãïx”ˇˇHçÖ‡ÿˇˇHç5V  Hâ«∏    ËóÔˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë	˙ˇˇãÖ|”ˇˇâ«ËqÓˇˇHâÖ@”ˇˇHãÖ@”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«ËÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë¿˘ˇˇãÖÄ”ˇˇâ«ËXÓˇˇHâÖH”ˇˇHãÖH”ˇˇHãHçÖ‡ÿˇˇHâ÷Hâ«Ë’ÌˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ëw˘ˇˇHãï†”ˇˇHçÖ‡ÿˇˇHç5å  Hâ«∏    Ë ÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë<˘ˇˇHãïê”ˇˇHçÖ‡ÿˇˇHç5Q  Hâ«∏    ËèÓˇˇHãï ”ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë˘ˇˇHãÖ ”ˇˇHâ∆Hç=  ËÎ¯ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë’¯ˇˇHãï ”ˇˇHãÖ8”ˇˇHâ÷Hâ«Ë˘ˇˇHãÖ ”ˇˇHâ∆Hç=  Ë¶¯ˇˇÎ=ÉΩ”ˇˇ t4ãÖ4”ˇˇ%   = `  t"ãÖ4”ˇˇ%   =    tãÖ4”ˇˇ%   =   HãÖ8”ˇˇHâ«Ë≠ÏˇˇHãÖ(”ˇˇHâ«ËÆÏˇˇHâÖP”ˇˇHÉΩP”ˇˇ ÑB  È  HãÖX”ˇˇHÉ¿Hç5m  Hâ«ËÌˇˇÖ¿ÑÊ   HãÖX”ˇˇHÉ¿Hç5M  Hâ«Ë¯ÏˇˇÖ¿Ñƒ   ÉΩ”ˇˇ tHãÖX”ˇˇHÉ¿Hâ∆Hç="  ∏    ËXÏˇˇHãï(”ˇˇHçÖ‘ˇˇHâ÷Hâ«ËÔÎˇˇHçÖ‘ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‘ˇˇH–f« / HãÖX”ˇˇHçPHçÖ‘ˇˇHâ÷Hâ«ËæÏˇˇãÖ”ˇˇçxãç”ˇˇãï”ˇˇHãµ ”ˇˇHçÖ‘ˇˇAâ»â—â˙Hâ«Ë¯ˇˇHãÖP”ˇˇHâ«Ë=ÏˇˇHâÖX”ˇˇHÉΩX”ˇˇ Ö‘˛ˇˇHãÖP”ˇˇHâ«ËŸÎˇˇÎêHãE¯dH3%(   tËbÎˇˇ…√AWAVIâ◊AUATLç%f  UHç-f  SAâ˝IâˆL)ÂHÉÏH¡˝ËØÍˇˇHÖÌt 1€Ñ     Lâ˙LâˆDâÔAˇ‹HÉ√H9›uÍHÉƒ[]A\A]A^A_√êf.Ñ     Û√f.Ñ     @ HâÚHâ˛ø   È`ÎˇˇHÉÏHÉƒ√         / . %s 
    r STARTHEADER %s d - w x l      
Total bytes of files packed: %i
 a r STARTHEADER %i %li ENDHEADER STARTPROGRAM ENDPROGRAM . .. packing... %s 
 ;t      ¿Èˇˇ¿    ÎˇˇË   0Îˇˇê   :Ïˇˇ   Óˇˇ   BÓˇˇ@  mÓˇˇ`  õıˇˇÄ  ˘ıˇˇ†  Üˆˇˇ¿  ¿˛ˇˇ‡  0ˇˇˇ(  @ˇˇˇ@             zR xê      òÍˇˇ+                  zR xê  $      ¯Ëˇˇ`   FJwÄ ?;*3$"       D   0Íˇˇ              \   2Îˇˇ›   AÜCÿ    |   ÔÏˇˇ+    AÜCf      ú   ˙Ïˇˇ+    AÜCf      º   Ìˇˇ.   AÜC)    ‹   Ùˇˇ^    AÜCY     ¸   QÙˇˇç    AÜCà       æÙˇˇ:   AÜC5 D   <  ÿ¸ˇˇe    BèBéE çB(åH0ÜH8ÉM@r8A0A(B BBB    Ñ   ˝ˇˇ              ú  ¯¸ˇˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 –                           Ä	             0             -                            -                    ı˛ˇo    ò             @             ∏      
                                                 /             ¯                           à             »             ¿       	                            ˚ˇˇo          ˛ˇˇo    ò      ˇˇˇo           ˇˇo    `      ˘ˇˇo                                                                                           (-                      ∂	      ∆	      ÷	      Ê	      ˆ	      
      
      &
      6
      F
      V
      f
      v
      Ü
      ñ
      ¶
      ∂
      ∆
      ÷
      Ê
      ˆ
                                                      0      GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0                                    8                    T                    t                    ò                    ∏                    @                    `                    ò                   	 »                   
 à                    Ä	                    †	                                                             0                    @                    ‡                    X                     -                     -                    (-                    /                     0                    0                                        Òˇ                     @                   Ä              !     –              7     0             F      -              m                   y     -              ò    Òˇ                ü    Òˇ                ´    Òˇ                ≤    Òˇ                    Òˇ                º     4"                   Òˇ                2                          -              €     (-              ‰      -              ˜      ‡              
    /                                0                 7                     I    Ÿ      ç       T                      ¨      0              p                     Ñ    M      .      è    0              ñ                     ™                     ø                     *    0              ’                     ú                     Ò                         ˜      +                            )                     =                     P                     f    f      :      n                     Å                     †    {      ^       ™     0              ∑                     À                      ⁄   0              Á    @             ˆ                                               †      e       0                     ÷     0              D    "      +       ∞          +       Q    0              ]          ›      b                     u                     á                     õ                     ∞   0              º                      ÷  "                   *    Ä	               crtstuff.c deregister_tm_clones __do_global_dtors_aux completed.7697 __do_global_dtors_aux_fini_array_entry frame_dummy __frame_dummy_init_array_entry main.c encrypted.c look.c packing.c __FRAME_END__ __init_array_end _DYNAMIC __init_array_start __GNU_EH_FRAME_HDR _GLOBAL_OFFSET_TABLE_ __libc_csu_fini __stat free@@GLIBC_2.2.5 addContent _ITM_deregisterTMCloneTable strcpy@@GLIBC_2.2.5 packedInfo _edata fclose@@GLIBC_2.2.5 opendir@@GLIBC_2.2.5 getpwuid@@GLIBC_2.2.5 __stack_chk_fail@@GLIBC_2.4 getgrgid@@GLIBC_2.2.5 rotarIzquierda fputs@@GLIBC_2.2.5 fscanf@@GLIBC_2.2.5 fgetc@@GLIBC_2.2.5 closedir@@GLIBC_2.2.5 packing fputc@@GLIBC_2.2.5 __libc_start_main@@GLIBC_2.2.5 addHeader __data_start strcmp@@GLIBC_2.2.5 __gmon_start__ __dso_handle _IO_stdin_used __xstat@@GLIBC_2.2.5 readdir@@GLIBC_2.2.5 __libc_csu_init malloc@@GLIBC_2.2.5 rotarDerecha __bss_start main fopen@@GLIBC_2.2.5 atoi@@GLIBC_2.2.5 strcat@@GLIBC_2.2.5 sprintf@@GLIBC_2.2.5 __TMC_END__ _ITM_registerTMCloneTable __cxa_finalize@@GLIBC_2.2.5  .symtab .strtab .shstrtab .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame .init_array .fini_array .dynamic .data .bss .comment                                                                              8      8                                    #             T      T                                     1             t      t      $                              D   ˆˇˇo       ò      ò                                   N             ∏      ∏      à                          V             @      @                                   ^   ˇˇˇo       `      `      6                            k   ˛ˇˇo       ò      ò      0                            z             »      »      ¿                            Ñ      B       à      à      ¯                          é             Ä	      Ä	                                    â             †	      †	      `                            î                                                        ù                                                       £             0      0      	                              ©             @      @      †                              ±             ‡      ‡      t                              ø             X       X       ‡                             …             -      -                                   ’              -       -                                   ·             (-      (-                                 ò             /      /      Ë                             Í              0       0                                                 0      0                                    ı      0               0      +                                                   @0      –         /                 	                      9      Ú                                                   =      ˛                              
ENDPROGRAM
STARTHEADER
./encrypted.o
33204
samuel
samuel
8
1416
ENDHEADER
STARTPROGRAM
ELF          >                    »          @     @  
 UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”Ê∏    +E¯ãU¸â¡”˙â–	]√UHâÂâ}¸âu¯ãE¯ãU¸â÷â¡”˛∏    +E¯ãU¸â¡”‚â–	]√ GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0              zR xê            +    AÜCf      <       +    AÜCf                               Òˇ                                                                                                                                                                 +            +       +        encrypted.c rotarIzquierda rotarDerecha                              @             +        .symtab .strtab .shstrtab .text .data .bss .comment .note.GNU-stack .rela.eh_frame                                                                                          @       V                              !                     ñ                                      '                     ñ                                      ,      0               ñ       ,                             5                      ¬                                      J                     »       X                              E      @               @      0                                                               	                    	                            )                                                    p      T                              
ENDPROGRAM
STARTHEADER
./look.o
33204
samuel
samuel
16
5608
ENDHEADER
STARTPROGRAM
ELF          >                    ®          @     @   UHâÂHÅÏÄN  HâΩà±ˇˇHâµÄ±ˇˇdHã%(   HâE¯1¿ød   Ë    HâÖò±ˇˇød   Ë    HâÖ†±ˇˇød   Ë    HâÖ®±ˇˇød   Ë    HâÖ∞±ˇˇød   Ë    HâÖ∏±ˇˇød   Ë    HâÖ¿±ˇˇHãÖÄ±ˇˇHç5    Hâ«Ë    HâÖ»±ˇˇ«Öê±ˇˇ    Èª  ∆Ö‡ÿˇˇ HçÖ–±ˇˇHç5    Hâ«Ë    Ö¿Ö{  Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖò±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ†±ˇˇHâ÷Hâ«Ë    HãÖ†±ˇˇHâ«Ë    âÖî±ˇˇãÖî±ˇˇ%   = @  u	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇ%   Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇ%Ä   Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡@Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡ Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    ãÖî±ˇˇÉ‡Ö¿t	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    HãÖ®±ˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHãÖ®±ˇˇH–f«   ãÖî±ˇˇ%   = †  u	Hç    ÎHç    Hãï®±ˇˇHâ∆Hâ◊Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ∞±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ∏±ˇˇHâ÷Hâ«Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    Hçï–±ˇˇHãÖ¿±ˇˇHâ÷Hâ«Ë    HãÖ¿±ˇˇHâ«Ë    Öê±ˇˇHçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï®±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∞±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï∏±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f«   Hãï¿±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–Hæ      	 Hâ0∆@ Hãïò±ˇˇHçÖ‡ÿˇˇHâ÷Hâ«Ë    HçÖ‡ÿˇˇH«¡ˇˇˇˇHâ¬∏    Hâ◊ÚÆHâ»H˜–HçPˇHçÖ‡ÿˇˇH–f« 
 HçÖ‡ÿˇˇHâ∆Hç=    ∏    Ë    Hçï–±ˇˇHãÖ»±ˇˇHç5    Hâ«∏    Ë    É¯ˇÖ˙ˇˇãÖê±ˇˇâ∆Hç=    ∏    Ë    HãÖò±ˇˇHâ«Ë    HãÖ†±ˇˇHâ«Ë    HãÖ∞±ˇˇHâ«Ë    HãÖ∏±ˇˇHâ«Ë    HãÖ¿±ˇˇHâ«Ë    HãÖ»±ˇˇHâ«Ë    ∏    HãM¯dH3%(   tË    …√  r STARTHEADER %s d - w x l      
Total bytes of files packed: %i
  GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0          zR xê            .   AÜC)                             Òˇ                                                                                                                                                                                       .                            )                      0                      6                      =                      D                      K                      P                      W                      ^                      c                      j                       look.c packedInfo _GLOBAL_OFFSET_TABLE_ malloc fopen strcmp fscanf strcpy atoi strcat printf free fclose __stack_chk_fail      .             ¸ˇˇˇˇˇˇˇ?             ¸ˇˇˇˇˇˇˇP             ¸ˇˇˇˇˇˇˇa             ¸ˇˇˇˇˇˇˇr             ¸ˇˇˇˇˇˇˇÉ             ¸ˇˇˇˇˇˇˇò             ¸ˇˇˇˇˇˇˇ†             ¸ˇˇˇˇˇˇˇÀ             ˛ˇˇˇˇˇˇˇ”             ¸ˇˇˇˇˇˇˇ             
       ˝             ¸ˇˇˇˇˇˇˇ            ¸ˇˇˇˇˇˇˇ+            
       8            ¸ˇˇˇˇˇˇˇQ            ¸ˇˇˇˇˇˇˇ`            ¸ˇˇˇˇˇˇˇ                   à                   ö            ¸ˇˇˇˇˇˇˇ∞            ¸ˇˇˇˇˇˇˇπ                   À            ¸ˇˇˇˇˇˇˇ·                   Í                   ¸            ¸ˇˇˇˇˇˇˇ                                      +            ¸ˇˇˇˇˇˇˇ?            ¸ˇˇˇˇˇˇˇH                   Z            ¸ˇˇˇˇˇˇˇn                   w                   â            ¸ˇˇˇˇˇˇˇù                   ¶                   ∏            ¸ˇˇˇˇˇˇˇÃ            ¸ˇˇˇˇˇˇˇ’                   Á            ¸ˇˇˇˇˇˇˇ˚                                                  ¸ˇˇˇˇˇˇˇ*                   3                   E            ¸ˇˇˇˇˇˇˇí                   õ                   ≠            ¸ˇˇˇˇˇˇˇ¬            
       œ            ¸ˇˇˇˇˇˇˇË            ¸ˇˇˇˇˇˇˇ˝            
       
            ¸ˇˇˇˇˇˇˇ#            ¸ˇˇˇˇˇˇˇ8            
       E            ¸ˇˇˇˇˇˇˇZ            
       g            ¸ˇˇˇˇˇˇˇÄ            ¸ˇˇˇˇˇˇˇè            ¸ˇˇˇˇˇˇˇ‚            ¸ˇˇˇˇˇˇˇ/            ¸ˇˇˇˇˇˇˇ|            ¸ˇˇˇˇˇˇˇ…            ¸ˇˇˇˇˇˇˇ"            ¸ˇˇˇˇˇˇˇg            
       q            ¸ˇˇˇˇˇˇˇÜ            
       ì            ¸ˇˇˇˇˇˇˇ´                   µ            ¸ˇˇˇˇˇˇˇƒ            ¸ˇˇˇˇˇˇˇ”            ¸ˇˇˇˇˇˇˇ‚            ¸ˇˇˇˇˇˇˇÒ            ¸ˇˇˇˇˇˇˇ             ¸ˇˇˇˇˇˇˇ            ¸ˇˇˇˇˇˇˇ(            ¸ˇˇˇˇˇˇˇ                       .symtab .strtab .shstrtab .rela.text .data .bss .rodata .comment .note.GNU-stack .rela.eh_frame                                                                                              @       .                                   @               ®
      Ä      
                    &                     n                                     ,                     n                                     1                     p      B                              9      0               ≤      ,                             B                      ﬁ                                     W                     ‡      8                              R      @               (             
                                                         	                 	                      (
      {                                                    @      a                              
ENDPROGRAM
STARTHEADER
./.vscode
16893
samuel
samuel
8
4096
ENDHEADER
STARTHEADER
./.vscode/settings.json
33204
samuel
samuel
8
109
ENDHEADER
STARTPROGRAM
{
    "files.associations": {
        "stat.h": "c",
        "unistd.h": "c",
        "stdlib.h": "c"
    }
}
ENDPROGRAM
